{"version":3,"sources":["image/SAITA.png","configurationUtil.js","Components/Feedback.js","Components/Home.js","Actions/index.js","Components/State.js","Components/Header.js","Components/Footer.js","App.js","stateDefault.js","Reducers/index.js","Reducers/saitaDetailsReducer.js","Actions/saitaDefs.js","store.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","LOCAL_STR_CONFIG_KEY","configs","properties","localStorage","setItem","getItem","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","key","localStrConfig","sessionStorage","JSON","parse","getConfig","api","axios","create","baseURL","validateEmail","email","test","String","toLowerCase","Feedback","useState","data","setData","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","then","res","catch","error","console","log","makeStyles","theme","title","marginRight","spacing","color","textAlign","flex","navButton","alignSelf","navIcon","padding","width","useStyles","className","Alert","severity","map","msg","i","columns","field","hidden","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","errorType","push","applicationName","applicationVersion","errorDescription","userName","contactNumber","userEmail","length","patch","id","dataUpdate","tableData","handleRowUpdate","onRowAdd","post","dataToAdd","handleRowAdd","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","CryptoJS","require","ciphertext","AES","encrypt","toString","plaintext","decrypt","enc","Utf8","Home","Carousel","Item","interval","src","alt","Caption","React","Component","SAITA_DETAILS_REQUESTED","SAITA_DETAILS_SUCCESS","SAITA_DETAILS_REQUEST_FAILED","State","state","name","display","e","setState","target","value","this","updateSaitaDetails","prevProps","username","fetchData","saitaDetail","saitaDetails","type","onChange","Name","ID","Project","Version","connect","saitaDetailsReducer","dispatch","Header","classes","AppBar","position","Toolbar","Typography","image","variant","Button","component","Link","to","path","Footer","App","STATE","combineReducers","action","failed","loading","payload","selectSaitaDetails","rootSaga","response","put","all","takeLatest","sageMiddleware","createSagaMiddleware","middleware","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8372ed5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SAITA.8e18d2ad.png\";","import axios from \"axios\";\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nvar API_BASE_URL = 'API_BASE_URL';\r\nexport const LOCAL_STR_CONFIG_KEY = 'saita-config';\r\n// Define consigs\r\nlet configs = {};\r\n\r\n// Persist config values\r\nexport const persistConfig = (res) => {\r\n\r\n    if (res) {\r\n      configs[API_BASE_URL] = API_BASE;\r\n      console.log(\"configus\",configs)\r\n      sessionStorage.setItem(LOCAL_STR_CONFIG_KEY, JSON.stringify(configs));\r\n    }\r\n  }\r\n\r\n  export const properties = {\r\n    API_BASE_URL: API_BASE_URL\r\n  }\r\n  \r\n  // Get config values\r\n  export const getConfig = (key) => {\r\n\r\n    let localStrConfig = sessionStorage.getItem(LOCAL_STR_CONFIG_KEY);\r\n    if (localStrConfig) {\r\n      localStrConfig = JSON.parse(localStrConfig);\r\n      if (localStrConfig[key]) {\r\n        return localStrConfig[key];\r\n      }\r\n    }\r\n    return configs[key];\r\n  }\r\n  \r\n  export const setConfig = (key,val) => {\r\n    let localStrConfig = sessionStorage.getItem(LOCAL_STR_CONFIG_KEY);\r\n    if (localStrConfig) {\r\n      localStrConfig = JSON.parse(localStrConfig);\r\n      localStrConfig[key] = val;\r\n      sessionStorage.setItem(LOCAL_STR_CONFIG_KEY, JSON.stringify(localStrConfig));\r\n    }\r\n  }\r\n\r\n  // Initialize config values\r\n  export const initConfig = async () => {\r\n    if (!sessionStorage.getItem(LOCAL_STR_CONFIG_KEY)) {\r\n      let urlParams = getUrlParams();\r\n      let promises = [];\r\n      urlParams.forEach((urlPath)=>{\r\n        promises.push(axios.get(`${urlPath}`));\r\n      });\r\n      return await Promise.all(promises);\r\n  \r\n  \r\n    }\r\n  }\r\n// set params\r\n  const getUrlParams = () => {\r\n    let params = [];\r\n    //push base url\r\n    params.push(API_BASE);\r\n    return params;\r\n  \r\n  }","// Application related admin view main react ui\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { forwardRef } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getConfig, properties } from '../configurationUtil.js';\r\n\r\n// -----------------local storage------------------\r\n// setter\r\nlocalStorage.setItem('Name', \"Kaushalya Rajapakshe\");\r\nlocalStorage.setItem('ID', \"IT16178700\");\r\nlocalStorage.setItem('Project', \"SAITA\");\r\nlocalStorage.setItem('Version', \"1.0\");\r\n\r\n// getter\r\nlocalStorage.getItem('Name');\r\n\r\n// remove\r\n// localStorage.removeItem('Name');\r\n\r\n// remove all\r\n// localStorage.clear();\r\n\r\n\r\n\r\n// Table icon set\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nvar API_BASE = getConfig(properties.API_BASE_URL);\r\nAPI_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Application realted admin view react api base url\r\nconst api = axios.create({\r\n    // baseURL: `http://localhost:8083` + API_BASE + `/feedback`\r\n    baseURL: `https://localhost:8443` + API_BASE + `/feedback`\r\n})\r\n// validate email\r\nfunction validateEmail(email) {\r\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n// React Feedback function\r\nfunction Feedback() {\r\n    var columns = [\r\n        { title: \"id\", field: \"id\", hidden: true },\r\n        { title: \"Error Type\", field: \"errorType\" },\r\n        { title: \"Error Description\", field: \"errorDescription\" },\r\n        { title: \"User name\", field: \"userName\" },\r\n        { title: \"Contact Number\", field: \"contactNumber\" },\r\n        { title: \"User Email\", field: \"userEmail\" },\r\n        { title: \"Application Name\", field: \"applicationName\" },\r\n        { title: \"Application Version\", field: \"applicationVersion\" }\r\n    ]\r\n    const [data, setData] = useState([]); //table data\r\n\r\n    //for error handling\r\n    const [iserror, setIserror] = useState(false)\r\n    const [errorMessages, setErrorMessages] = useState([])\r\n\r\n    // Get user issue feedback\r\n    useEffect(() => {\r\n        api.get(\"/issue\")\r\n            .then(res => {\r\n                setData(res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error\")\r\n            })\r\n    }, [])\r\n\r\n    // Upadte user feedback\r\n    const handleRowUpdate = (newData, oldData, resolve) => {\r\n        //validation\r\n        let errorList = []\r\n        if (newData.errorType === \"\") {\r\n            errorList.push(\"Please enter error type\")\r\n        }\r\n        if (newData.applicationName === \"\") {\r\n            errorList.push(\"Please enter application name\")\r\n        }\r\n        if (newData.applicationVersion === \"\") {\r\n            errorList.push(\"Please enter application version\")\r\n        }\r\n        if (newData.errorDescription === \"\") {\r\n            errorList.push(\"Please enter error description\")\r\n        }\r\n        if (newData.userName === \"\") {\r\n            errorList.push(\"Please enter user name\")\r\n        }\r\n        if (newData.contactNumber === \"\") {\r\n            errorList.push(\"Please enter contact number\")\r\n        }\r\n        if (newData.userEmail === \"\" || validateEmail(newData.userEmail) === false) {\r\n            errorList.push(\"Please enter a valid email\")\r\n        }\r\n\r\n        if (errorList.length < 1) {\r\n            api.patch(\"/issue/\" + newData.id, newData)\r\n                .then(res => {\r\n                    const dataUpdate = [...data];\r\n                    const index = oldData.tableData.id;\r\n                    dataUpdate[index] = newData;\r\n                    setData([...dataUpdate]);\r\n                    resolve()\r\n                    setIserror(false)\r\n                    setErrorMessages([])\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessages([\"Update failed! Server error\"])\r\n                    setIserror(true)\r\n                    resolve()\r\n\r\n                })\r\n        } else {\r\n            setErrorMessages(errorList)\r\n            setIserror(true)\r\n            resolve()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Added new user feedback from admin side\r\n    const handleRowAdd = (newData, resolve) => {\r\n        //validation\r\n        let errorList = []\r\n        if (newData.errorType === \"\") {\r\n            errorList.push(\"Please enter error type\")\r\n        }\r\n        if (newData.applicationName === \"\") {\r\n            errorList.push(\"Please enter application name\")\r\n        }\r\n        if (newData.applicationVersion === \"\") {\r\n            errorList.push(\"Please enter application version\")\r\n        }\r\n        if (newData.errorDescription === \"\") {\r\n            errorList.push(\"Please enter error description\")\r\n        }\r\n        if (newData.userName === \"\") {\r\n            errorList.push(\"Please enter user name\")\r\n        }\r\n        if (newData.contactNumber === \"\") {\r\n            errorList.push(\"Please enter contact Nnumber\")\r\n        }\r\n        if (newData.userEmail === \"\" || validateEmail(newData.userEmail) === false) {\r\n            errorList.push(\"Please enter a valid email\")\r\n        }\r\n\r\n        if (errorList.length < 1) { //no error\r\n            api.post(\"/issue\", newData)\r\n                .then(res => {\r\n                    let dataToAdd = [...data];\r\n                    dataToAdd.push(newData);\r\n                    setData(dataToAdd);\r\n                    resolve()\r\n                    setErrorMessages([])\r\n                    setIserror(false)\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessages([\"Cannot add data. Server error!\"])\r\n                    setIserror(true)\r\n                    resolve()\r\n                })\r\n        } else {\r\n            setErrorMessages(errorList)\r\n            setIserror(true)\r\n            resolve()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // Delete unwanted user feedback\r\n    const handleRowDelete = (oldData, resolve) => {\r\n\r\n        api.delete(\"/issue/\" + oldData.id)\r\n            .then(res => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                setErrorMessages([\"Delete failed! Server error\"])\r\n                setIserror(true)\r\n                resolve()\r\n            })\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        title: {\r\n            marginRight: theme.spacing(2),\r\n            color: \"#ffc500!important\",\r\n            textAlign: 'left',\r\n            flex: 1\r\n        },\r\n        navButton: {\r\n            textAlign: 'right',\r\n            alignSelf: 'stretch'\r\n        },\r\n        navIcon: {\r\n            padding: '5px',\r\n            width: '35px'\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    // returning react ui view with user feedback table data\r\n    return (\r\n        <Router>\r\n            <div className=\"feedback\">\r\n                <div>\r\n                    {iserror &&\r\n                        <Alert severity=\"error\">\r\n                            {errorMessages.map((msg, i) => {\r\n                                return <div key={i}>{msg}</div>\r\n                            })}\r\n                        </Alert>\r\n                    }\r\n                </div>\r\n                <MaterialTable\r\n                    title=\"Application related user feedback \"\r\n                    columns={columns}\r\n                    data={data}\r\n                    icons={tableIcons}\r\n                    editable={{\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                handleRowUpdate(newData, oldData, resolve);\r\n\r\n                            }),\r\n                        onRowAdd: (newData) =>\r\n                            new Promise((resolve) => {\r\n                                handleRowAdd(newData, resolve)\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                handleRowDelete(oldData, resolve)\r\n                            }),\r\n                    }}\r\n                />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Feedback;\r\n","// src/components/bootstrap-carousel.component.js\r\nimport React from \"react\";\r\n\r\nimport { Carousel } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// -----------------encryption------------------\r\nvar password = \"KAushi1211\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n// Encrypt\r\nvar ciphertext = CryptoJS.AES.encrypt(password, 'secret key 123');\r\nconsole.log(\"encrypted text\", ciphertext.toString());\r\n\r\n// Decrypt\r\nvar bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), 'secret key 123');\r\nvar plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\nconsole.log(\"decrypted text\", plaintext);\r\n// -----------------session storage------------------\r\n// setter\r\nsessionStorage.setItem('username', \"kaushi.rajapakshe1@gmail.com\");\r\nsessionStorage.setItem('password', ciphertext.toString());\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className='container-fluid' >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Carousel>\r\n                                <Carousel.Item interval={500}>\r\n                                    <img\r\n                                        className=\"d-block w-100\"\r\n                                        src=\"../s2.jpg\"\r\n                                        alt=\"First slide\"\r\n                                    />\r\n                                    <Carousel.Caption>\r\n                                        <h1>Solve your issue with SAITA</h1>\r\n                                        <p>You can fix your any windows issue with SAITA system.</p>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                    <img\r\n                                        className=\"d-block w-100\"\r\n                                        src=\"../s3.jpg\"\r\n                                        alt=\"Second slide\"\r\n                                    />\r\n                                    <Carousel.Caption>\r\n                                        <h1>Configure your windows with SAITA</h1>\r\n                                        <p>Setup environments on windows using SAITA without any issue.</p>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                            </Carousel>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-content\">\r\n                    <h2 className=\"home-title\"><b>SMART ARTIFICIAL INTELLIGENT TROUBLESHOOTING AGENT</b></h2>\r\n                    <p className=\"home-description\">While working on computers, people frequently confront with various kinds of problems,\r\n                    those beyond their extensive expertise. Microsoft Windows is the widely used Operating\r\n                    System running on numerous personal computers (PCs) and the reason which gives more\r\n                    irritating problems that require to be addressed. Currently, troubleshooting is considered\r\n                    as a costly and time-consuming approach. The SAITA is an Artificial Intelligent\r\n                    Troubleshooting Agent which is a machine learning based system for solving most common\r\n                    Windows-specific issues within a short period of time than the traditional approach.\r\n                    The assistant learns from the accessible data and accomplishes the task for PC users as\r\n                    performed by human experts. The main objective of this exploration venture is to distinguish\r\n                    the constraints of existing troubleshooting software and create an AI troubleshooting\r\n                    assistant to provide solutions to fix the identified user issues. The use of this assistant\r\n                    would be economical as an IT help desk alternative in the industry. SAITA is developed to\r\n                    serve as a representative troubleshooter for fundamental user issues, service issues,\r\n                    application issues, and perform environment setup by analyzing software. This system will be\r\n                 able to solve the common Windows user’s issues as same as a human with less time.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Home;","\r\nexport const SAITA_DETAILS_REQUESTED = \"SAITA_DETAILS_REQUESTED\";\r\nexport const SAITA_DETAILS_SUCCESS = 'SAITA_DETAILS_SUCCESS';\r\nexport const SAITA_DETAILS_REQUEST_FAILED = 'SAITA_DETAILS_REQUEST_FAILED';","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { SAITA_DETAILS_REQUESTED } from '../Actions';\r\nimport { connect } from 'react-redux'\r\n\r\n// Test Class\r\nclass State extends Component {\r\n    \r\n    // Constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    // state\r\n    state = {\r\n        name: ''\r\n    }\r\n\r\n    // update state and display implementation\r\n    display = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    // Component Mount\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            name: \"unset\"\r\n        })\r\n        this.props.updateSaitaDetails();\r\n    }\r\n\r\n    // Component Update\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.username !== prevProps.username) {\r\n            this.fetchData(this.props.username);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Assign state values to siataDetail\r\n        let saitaDetail = this.props.saitaDetails;\r\n        return (\r\n            <div className=\"home-content\">\r\n                <h2 className=\"home-title\"><b>Hi {this.props.username}!</b></h2>\r\n                <label className=\"home-description\"> Name   : <span>        </span>\r\n                <input type=\"text\" name=\"name\" onChange={this.display}/>\r\n                </label>\r\n                {this.state.name ? <p className=\"home-description\">My name is {this.state.name}</p> : \"\"}\r\n                {/* Dispalay Redux state values */}\r\n                {saitaDetail ? <pre className=\"home-title\"> Name : {saitaDetail.Name}     ID : {saitaDetail.ID}     Project : {saitaDetail.Project}     Version : {saitaDetail.Version}</pre> : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// Get Redux state values and map to props\r\nconst mapStateToProps = (state) => {\r\n    const { saitaDetailsReducer } = state;\r\n\r\n    return {\r\n        saitaDetails: saitaDetailsReducer.data\r\n    }\r\n}\r\n// Dispatch state values\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSaitaDetails: () => dispatch({ type: SAITA_DETAILS_REQUESTED })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(State)","import React from 'react';\r\nimport '../App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport image from '../image/SAITA.png';\r\n\r\nimport Feedback from \"./Feedback.js\";\r\nimport Home from \"./Home.js\";\r\nimport State from \"./State.js\";\r\n\r\n// React Header function\r\nfunction Header() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        title: {\r\n            marginRight: theme.spacing(2),\r\n            color: \"#ffc500!important\",\r\n            textAlign: 'left',\r\n            flex: 1\r\n        },\r\n        navButton: {\r\n            textAlign: 'right',\r\n            alignSelf: 'stretch'\r\n        },\r\n        navIcon: {\r\n            padding: '5px',\r\n            width: '35px'\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    // returning react header ui view component\r\n    return (\r\n        <Router>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className=\"toolbar\">\r\n                    <Typography>\r\n                        <img src={image} className={classes.navIcon} />\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        SAITA Feedback UI\r\n          </Typography>\r\n                    <Button component={Link} to='/' color=\"inherit\" className={classes.navButton}>Home</Button>\r\n                    <Button component={Link} to='/feedback' color=\"inherit\" className={classes.navButton}>User Feedback</Button>\r\n                    <Button component={Link} to='/state' color=\"inherit\" className={classes.navButton}>State</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n            <Switch>\r\n                 {/* set props */}\r\n                <Route path=\"/state\"> \r\n                    <State username = \"kaushi.rajapakshe1@gmail.com\"/>\r\n                </Route>\r\n                <Route path=\"/feedback\">\r\n                    <Feedback/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../App.css';\r\n\r\n\r\n// React Footer function\r\nfunction Footer() {\r\n    // returning react footer ui view component\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"element1\">Copyright ©2020 All rights reserved | The SAITA system owned  by </div>\r\n            <div className=\"element2\">Team SAITA</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","// Application related admin view main react ui\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Header from './Components/Header.js';\r\nimport Footer from \"./Components/Footer.js\";\r\n\r\n// React App function\r\nfunction App() {\r\n\r\n  // returning react ui view with user feedback table data\r\n  return (\r\n    <Router>\r\n      <div className=\"main\">\r\n        <div className=\"App\">\r\n          <Header />\r\n          <section className=\"line\"></section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","export const STATE = {\r\n  saitaDetailsReducer: {\r\n    data: {}\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\n// all your reducers here...\r\nimport { saitaDetailReducer } from \"./saitaDetailsReducer\";\r\n\r\n// combine all reducers....\r\nexport default combineReducers({\r\n    saitaDetailsReducer: saitaDetailReducer\r\n})\r\n","import { STATE } from \"../stateDefault\";\r\nimport { SAITA_DETAILS_SUCCESS, SAITA_DETAILS_REQUEST_FAILED } from '../Actions';\r\n\r\n// Saita Details Reducer\r\nexport function saitaDetailReducer(state = STATE.saitaDetailsReducer, action) {\r\n    switch (action.type) {\r\n        case SAITA_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                failed: false,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n        case SAITA_DETAILS_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                failed: true,\r\n                loading: false,\r\n                data: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { put, all, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n    SAITA_DETAILS_SUCCESS,\r\n    SAITA_DETAILS_REQUEST_FAILED,\r\n    SAITA_DETAILS_REQUESTED\r\n} from \"./index\";\r\n\r\n// Saita Details Value Action Fire\r\nfunction* selectSaitaDetails(action) {\r\n    if (action) {\r\n        try {\r\n            // Set saita details\r\n            const response = {'Name': \"Kaushalya Rajapakshe\",\r\n                      'ID': \"IT16178700\",\r\n                      'Project': \"SAITA\",\r\n                      'Version': \"1.0\"\r\n                     }\r\n            yield put({ type: SAITA_DETAILS_SUCCESS, payload: response });\r\n        } catch (err) {\r\n            yield put({ type: SAITA_DETAILS_REQUEST_FAILED, payload: err });\r\n        }\r\n    }\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        takeLatest(SAITA_DETAILS_REQUESTED, selectSaitaDetails)\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport { rootSaga } from \"./Actions/saitaDefs\";\r\n\r\nconst sageMiddleware = createSagaMiddleware();\r\nexport const history = createBrowserHistory();\r\n\r\nconst middleware = process.env.NODE_ENV !== 'production' ?\r\n  [sageMiddleware] :\r\n  [sageMiddleware];\r\n\r\n// create REDUX //\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nsageMiddleware.run(rootSaga);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import { initConfig, persistConfig } from './configurationUtil.js';\r\n\r\n// initConfig().then((response) => {\r\n//   let configVals = response.reduce((acc, curr) => {\r\n//     if (curr && curr.data) {\r\n//       acc = curr.data;\r\n//       return curr.data;\r\n//     }\r\n//     else {\r\n//       return acc;\r\n//     }\r\n//   });\r\n//   if (configVals && configVals.data) {\r\n//     configVals = configVals.data;\r\n//   }\r\n//   persistConfig(configVals);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// });\r\nserviceWorker.unregister();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}